{"ast":null,"code":"import _slicedToArray from \"/home/laptop/Documents/Uni/TUEML/Inpainting/FacialInpainting/src/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/laptop/Documents/Uni/TUEML/Inpainting/FacialInpainting/src/ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/laptop/Documents/Uni/TUEML/Inpainting/FacialInpainting/src/ui/src/components/imageLoaderModal/index.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport ImageCrop from '../imageCrop';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const children = props.children,\n        classes = props.classes,\n        onClose = props.onClose,\n        other = _objectWithoutProperties(props, [\"children\", \"classes\", \"onClose\"]);\n\n  return React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, children), onClose ? React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })) : null);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\nexport default function CustomizedDialogs(props) {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        crop = _React$useState4[0],\n        setCrop = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        src = _React$useState6[0],\n        setSrc = _React$useState6[1];\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleLoad = () => {\n    props.parentCallback({\n      crop: crop,\n      src: src\n    });\n    setOpen(false);\n    setCrop({});\n    setSrc(\"\");\n  };\n\n  const imagecropCallbackFunction = childData => {\n    setCrop(childData.crop);\n    setSrc(childData.src); //this.setState({message: childData})\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"secondary\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Load Image\"), React.createElement(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"load-dialog-title\",\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"load-dialog-title\",\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Load Image\"), React.createElement(DialogContent, {\n    dividers: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(ImageCrop, {\n    parentCallback: imagecropCallbackFunction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    autoFocus: true,\n    onClick: handleLoad,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Load\"))));\n}","map":{"version":3,"sources":["/home/laptop/Documents/Uni/TUEML/Inpainting/FacialInpainting/src/ui/src/components/imageLoaderModal/index.js"],"names":["React","withStyles","Button","Dialog","MuiDialogTitle","MuiDialogContent","MuiDialogActions","IconButton","CloseIcon","Typography","ImageCrop","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","DialogTitle","props","children","classes","onClose","other","DialogContent","DialogActions","CustomizedDialogs","useState","open","setOpen","crop","setCrop","src","setSrc","handleClickOpen","handleClose","handleLoad","parentCallback","imagecropCallbackFunction","childData"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ImageCrop from '../imageCrop';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\n\r\n\r\nexport default function CustomizedDialogs(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [crop, setCrop] = React.useState(false);\r\n  const [src, setSrc] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleLoad = () => {\r\n    props.parentCallback({crop: crop, src: src});\r\n    setOpen(false);\r\n    setCrop({});\r\n    setSrc(\"\");\r\n  };\r\n  const imagecropCallbackFunction = (childData) => {\r\n    setCrop(childData.crop);\r\n    setSrc(childData.src);\r\n    //this.setState({message: childData})\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen}>\r\n        Load Image\r\n      </Button>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"load-dialog-title\" open={open}>\r\n        <DialogTitle id=\"load-dialog-title\" onClose={handleClose}>\r\n          Load Image\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <ImageCrop parentCallback={imagecropCallbackFunction}/>\r\n        </DialogContent>\r\n        <DialogActions>\r\n\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button autoFocus onClick={handleLoad} color=\"primary\">\r\n            Load\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}